# Generated by Django 4.2.21 on 2025-06-03 22:10

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Horario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dia_semana",
                    models.CharField(
                        choices=[
                            ("lunes", "Lunes"),
                            ("martes", "Martes"),
                            ("miercoles", "Miércoles"),
                            ("jueves", "Jueves"),
                            ("viernes", "Viernes"),
                            ("sabado", "Sábado"),
                            ("domingo", "Domingo"),
                        ],
                        max_length=20,
                    ),
                ),
                ("hora_inicio", models.TimeField()),
                ("hora_fin", models.TimeField()),
            ],
            options={
                "db_table": "horario",
            },
        ),
        migrations.CreateModel(
            name="Materia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
                ("aula", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "materia",
            },
        ),
        migrations.CreateModel(
            name="Matricula",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[("activa", "Activa"), ("finalizada", "Finalizada")],
                        max_length=20,
                    ),
                ),
            ],
            options={
                "db_table": "matricula",
            },
        ),
        migrations.CreateModel(
            name="PeriodoAcademico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
                ("fecha_inicio", models.DateField()),
                ("fecha_fin", models.DateField()),
            ],
            options={
                "db_table": "periodo_academico",
            },
        ),
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("cedula", models.CharField(max_length=20, unique=True)),
                ("correo", models.EmailField(max_length=254, unique=True)),
                ("nombre_completo", models.CharField(max_length=255)),
                (
                    "foto",
                    models.ImageField(blank=True, null=True, upload_to="usuarios/"),
                ),
                (
                    "nivel_ingles",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("ultimo_acceso", models.DateTimeField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="usuario_set",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "horario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="fteapp.horario",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="usuario_set",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "usuario",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="RecuperacionContrasena",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(max_length=255)),
                ("fecha_solicitud", models.DateTimeField(auto_now_add=True)),
                ("usado", models.BooleanField(default=False)),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="fteapp.usuario"
                    ),
                ),
            ],
            options={
                "db_table": "recuperacion_contrasena",
            },
        ),
        migrations.CreateModel(
            name="Recomendacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mensaje", models.TextField()),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("motivacional", "Motivacional"),
                            ("academico", "Académico"),
                        ],
                        max_length=20,
                    ),
                ),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                (
                    "origen",
                    models.CharField(
                        choices=[("sistema", "Sistema"), ("manual", "Manual")],
                        max_length=20,
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="fteapp.usuario"
                    ),
                ),
            ],
            options={
                "db_table": "recomendacion",
            },
        ),
        migrations.CreateModel(
            name="Notificacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("titulo", models.CharField(max_length=255)),
                ("mensaje", models.TextField()),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("recordatorio", "Recordatorio"),
                            ("administrativo", "Administrativo"),
                            ("academico", "Académico"),
                        ],
                        max_length=20,
                    ),
                ),
                ("fecha_envio", models.DateTimeField(auto_now_add=True)),
                ("leida", models.BooleanField(default=False)),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="fteapp.usuario"
                    ),
                ),
            ],
            options={
                "db_table": "notificacion",
            },
        ),
        migrations.CreateModel(
            name="MatriculaMateria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "materia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="fteapp.materia"
                    ),
                ),
                (
                    "matricula",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fteapp.matricula",
                    ),
                ),
            ],
            options={
                "db_table": "matricula_materia",
            },
        ),
        migrations.AddField(
            model_name="matricula",
            name="periodo",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="fteapp.periodoacademico",
            ),
        ),
        migrations.AddField(
            model_name="matricula",
            name="usuario",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="fteapp.usuario"
            ),
        ),
        migrations.CreateModel(
            name="Material",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("titulo", models.CharField(max_length=255)),
                ("descripcion", models.TextField()),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("libro", "Libro"),
                            ("actividad", "Actividad"),
                            ("video", "Video"),
                        ],
                        max_length=20,
                    ),
                ),
                ("url_archivo", models.URLField()),
                ("fecha_publicacion", models.DateTimeField(auto_now_add=True)),
                (
                    "materia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="fteapp.materia"
                    ),
                ),
            ],
            options={
                "db_table": "material",
            },
        ),
        migrations.AddField(
            model_name="materia",
            name="profesor",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="fteapp.usuario",
            ),
        ),
        migrations.AddField(
            model_name="horario",
            name="materia",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="fteapp.materia"
            ),
        ),
        migrations.CreateModel(
            name="ClaseVirtual",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha", models.DateField()),
                ("hora_inicio", models.TimeField()),
                ("enlace", models.URLField()),
                (
                    "plataforma",
                    models.CharField(
                        choices=[("zoom", "Zoom"), ("meet", "Meet")], max_length=20
                    ),
                ),
                (
                    "materia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="fteapp.materia"
                    ),
                ),
            ],
            options={
                "db_table": "clase_virtual",
            },
        ),
        migrations.CreateModel(
            name="Calificacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nota", models.DecimalField(decimal_places=2, max_digits=4)),
                ("observacion", models.TextField(blank=True, null=True)),
                (
                    "materia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="fteapp.materia"
                    ),
                ),
                (
                    "periodo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fteapp.periodoacademico",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="fteapp.usuario"
                    ),
                ),
            ],
            options={
                "db_table": "calificacion",
            },
        ),
        migrations.CreateModel(
            name="Asistencia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha", models.DateField()),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("presente", "Presente"),
                            ("ausente", "Ausente"),
                            ("justificado", "Justificado"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "materia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="fteapp.materia"
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="fteapp.usuario"
                    ),
                ),
            ],
            options={
                "db_table": "asistencia",
            },
        ),
        migrations.CreateModel(
            name="ActividadUsuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo_actividad", models.CharField(max_length=50)),
                ("fecha_hora", models.DateTimeField(auto_now_add=True)),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="fteapp.usuario"
                    ),
                ),
            ],
            options={
                "db_table": "actividad_usuario",
            },
        ),
    ]
